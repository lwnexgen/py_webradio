String.prototype.format = function () {
  var i = 0, args = arguments;
  return this.replace(/{}/g, function () {
    return typeof args[i] != 'undefined' ? args[i++] : '';
  });
};

var buffered_segments = 3;
var HLSJS = Clappr.HLS.HLSJS;
var player = new Clappr.Player(
    {
	source: {
	    source: "http://{{ server_host }}/webtune_live/{{ station_readable }}.m3u8"
	},
	parentId: "#player",
	autoPlay: false,
	audioOnly: true,
	actualLiveTime: true,
	hideMediaControl: false,
	hlsjsConfig: {
	    liveSyncDurationCount: buffered_segments
	}
    }
);

function addSkip(value) {
    var btnID = 'skipBtn' + value.toString().replace('-', 'Back').replace('.', 'Point');
    var btnVal = value.toString();
    if (value > 0) {
	btnVal = "+" + btnVal;
    }
    var skipBtn = $('<button>', {
	'id': btnID,
	'type': 'submit',
	'class': 'btn btn-default',
    }).text(btnVal);
    skipBtn.click(function() {
	var seektime = player.getCurrentTime() + value;
	player.seek(seektime);
    });
    return skipBtn;
}

$("#controls").append(addSkip(-10));
$("#controls").append(addSkip(-5));
$("#controls").append(addSkip(-1));
$("#controls").append(addSkip(-.5));
$("#controls").append(addSkip(.5));
$("#controls").append(addSkip(1));
$("#controls").append(addSkip(5));
$("#controls").append(addSkip(10));

player.resize({
    height: $("#controls").height() * 2,
    width: $("#controls").width()
});
player.play();

function updDisplay(event, data) {
    var live_ts = player.core.getCurrentPlayback()._hls.liveSyncPosition;
    var total_ts = player.core.getCurrentPlayback()._hls.streamController.levels[0].details.totalduration;
    var current_segment = data.frag.sn;
    var current_ts = player.getCurrentTime() - (total_ts - live_ts);
    var offset = -1 * (live_ts - current_ts)
    var display = "{}".format(
	Math.round(((offset * 100) + Number.EPSILON) / 100)
    );
    $("#offset").text(display);
};

player.core.getCurrentPlayback()._hls.on(HLSJS.Events.FRAG_CHANGED, function(event, data) {
    updDisplay(event, data);
});
