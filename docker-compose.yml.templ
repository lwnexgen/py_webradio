version: "3.3"
services:
  rmq:
    image: rabbitmq:3.9-management
    ports:
      - DEFINEIP:60808:15672
  sched:
    build: sched/
    image: pywebsched:latest
    dns:
      - 8.8.8.8
    depends_on:
      - rmq
    env_file:
      - sched/sched-env.env
    volumes:
      - ./sched/tuner.json:/tmp/tuner.json
      - ./sched/fscfg.json:/tmp/fscfg.json
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - CODEDIR/py_webradio/schedule_skip.log:/tmp/schedule_skip.log:rw
    restart: always
  tuner:
    build: tuner/
    image: pywebtuner:latest
    privileged: true
    restart: unless-stopped
    volumes:
      - webdata:/var/www/html:rw
      - /mnt/megapenthes/Badgers:/mnt/megapenthes/Badgers:rw
      - ./tuner/tune.py:/tmp/pysched/tune.py:ro
      - CODEDIR/py_webradio/status.log:/tmp/pysched/status.log:rw
      - CODEDIR/py_webradio/merge.log:/tmp/pysched/merge.log:rw
    depends_on:
      - rmq
      - sched
    env_file:
      - tuner/tuner-env.env
  navidrome:
    image: deluan/navidrome:latest
    user: 1000:1000
    ports:
      - "DEFINEIP:4533:4533"
    restart: unless-stopped
    environment:
      # This is part of my reverse proxy setup; see below.
      ND_BASEURL: /navidrome
      # Re-scan the music library every 15 minutes.
      ND_LOGLEVEL: info
      ND_SESSIONTIMEOUT: 24h
    volumes:
      - "CODEDIR/navidrome-service/data:/data"
      - "BASEDIR/Music:/music:ro"
  server:
    build: server/
    image: pywebserver:latest
    volumes:
      - webdata:/usr/share/nginx/html:ro
      - certs:/etc/letsencrypt:rw
      - ./server/tuner-conf.d/.htpasswd:/etc/nginx/.htpasswd:ro
      - ./logs/:/var/log/nginx:rw
      - ./server/nginx-entrypoint.sh:/tmp/entrypoint-nginx.sh:ro
    env_file:
      - server/server-env.env
    ports:
      - "DEFINEIP:443:443"
    depends_on:
      - letsencrypt
  letsencrypt:
    build: letsencrypt/
    image: letsencrypt:latest
    volumes:
      - certs:/etc/letsencrypt:rw
      - webdata:/var/www/html:rw
      - ./le-logs:/var/log/letsencrypt:rw
    env_file:
      - server/server-env.env
    ports:
      - "DEFINEIP:80:80"
volumes:
  webdata:
  certs:
